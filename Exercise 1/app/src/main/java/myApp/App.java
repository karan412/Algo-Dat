/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package myApp;

import java.util.ArrayList;
import java.util.LinkedList;


public class App {
    private static final String BLACK = "\033[0;30m";   // BLACK

    private CommandFactory cmdFactory;
    private LinkedList<IConsole> commands;

    public App() {
        cmdFactory = new CommandFactory();
        commands = new LinkedList<>();
    }

    public void run() {
        while (true) {
            System.out.println(BLACK + "Console-Application: Exercise-1 \t \t \t"+"<Karan Singh> <Chhabda> <574360>\n");
            System.out.println(BLACK + "1. Greatest Common Divisor (GCD) - (Recursive) Euclid's algorithm subtraction.");
            System.out.println(BLACK + "2. Greatest Common Divisor (GCD) - (Iterative) Euclid's algorithm subtraction.");
            System.out.println(BLACK + "3. Greatest Common Divisor (GCD) - (Recursive) Euclid's algorithm division rest.");
            System.out.println(BLACK + "4. Greatest Common Divisor (GCD) - (Iterative) Euclid's algorithm division rest.");
            System.out.println(BLACK + "5. Sieve of Eratosthanes");
            System.out.println(BLACK + "6. Read properties like surname and prename, x and y.");
            System.out.println(BLACK + "0. Exit\n");
            Console c = new Console();
            int option = c.readIntegerFromStdin(BLACK + "Please enter a number for an option:");

            IConsole command = null;
            switch (option) {
                case 1:
                    command = cmdFactory.createGCDSubRecCmd();
                    break;

                case 2:
                    command = cmdFactory.createGCDSubItCmd();
                    break;

                case 3:
                    command = cmdFactory.createGCDDivRestRecCmd();
                    break;

                case 4:
                    command = cmdFactory.createGCDDivRestIteCmd();
                    break;

                case 5:
                    command = cmdFactory.createSieveOfEratosthanes();
                    break;

                case 6:
                    command = cmdFactory.createProperties();
                    break;

                case 0:
                    System.exit(0);
                    break;


            }
            if (command != null) {
                commands.add(command);
                command.execute();
            }
        }
    }

    public static void main(String[] args) {
        App app = new App();
        app.run();
    }
}

